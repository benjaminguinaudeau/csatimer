ideology = fct_relevel(ideology, "Far-Left", "Left", "Center", "Right", "Far-Right"))
dd %>%
filter(candidat %in% c("Melenchon Jean Luc", "Jadot Yannick", "Hidalgo Anne", "Taubira Christiane",
"Macron Emmanuel", "Pecresse Valerie", "Le Pen Marine", "Zemmour Eric")) %>%
# mutate(month = as.factor(month)) %>%
ggplot(aes(x = month, y = bias, group = candidat, color = ideology)) +
geom_line() +
facet_wrap(~station_type, ncol = 2) +
theme_minimal() +
theme(axis.text = element_text()) +
scale_color_manual(values = ideo_values_nogov)
all_cands <- unique(all_dt$candidat)
all_month <- unique(all_dt$month)
all_station <- unique(all_dt$station)
complete_cases <- expand_grid(candidat = all_cands, month = all_month, station = all_station) %>%
mutate(campaign = lubridate::year(month) == "2022")
final <- all_dt %>%
left_join(complete_cases) %>%
mutate(time = ifelse(is.na(time), 0, time)) %>%
group_by(month, station) %>%
mutate(total_station = sum(time, na.rm = T)) %>%
ungroup %>%
mutate(prop = time/total_station) %>%
glimpse
dd <- final %>%
left_join(polls_agg) %>%
add_station_dummies %>%
mutate(station_type = case_when(
is_tv & is_private ~ "Private TV",
is_tv & !is_private ~ "Public TV",
!is_tv & is_private ~ "Private Radio",
!is_tv & !is_private ~ "Public Radio"
)) %>%
group_by(station_type, month) %>%
mutate(total_station = sum(time, na.rm = T)) %>%
group_by(station_type, candidat, int, month) %>%
summarise(prop = sum(time, na.rm = T)/unique(total_station)) %>%
mutate(bias = prop - int/100) %>%
mutate(
ideology = case_when(
candidat == "Melenchon Jean Luc" ~ "Far-Left",
candidat == "Poutou Philippe" ~ "Far-Left",
candidat == "Arthaud Nathalie" ~ "Far-Left",
candidat == "Roussel Fabien" ~ "Far-Left",
candidat == "Hidalgo Anne" ~ "Left",
candidat == "Larrouturou Pierre" ~ "Left",
candidat == "Montebourg Arnaud" ~ "Left",
candidat == "Jadot Yannick" ~ "Left",
candidat == "Taubira Christiane" ~ "Left",
candidat == "Macron Emmanuel" ~ "Center",
candidat == "Lassalle Jean" ~ "Center",
candidat == "Pecresse Valerie" ~ "Right",
candidat == "Zemmour Eric" ~ "Far-Right",
candidat == "Le Pen Marine" ~ "Far-Right",
candidat == "Philippot Florian" ~ "Far-Right",
candidat == "Dupont Aignan Nicolas" ~ "Far-Right",
T ~ "Other"
),
ideology = fct_relevel(ideology, "Far-Left", "Left", "Center", "Right", "Far-Right"))
dd %>%
filter(candidat %in% c("Melenchon Jean Luc", "Jadot Yannick", "Hidalgo Anne", "Taubira Christiane",
"Macron Emmanuel", "Pecresse Valerie", "Le Pen Marine", "Zemmour Eric")) %>%
# mutate(month = as.factor(month)) %>%
ggplot(aes(x = month, y = bias, group = candidat, color = ideology)) +
geom_line() +
facet_wrap(~station_type, ncol = 2) +
theme_minimal() +
theme(axis.text = element_text()) +
scale_color_manual(values = ideo_values_nogov)
dd %>%
filter(candidat %in% c("Melenchon Jean Luc", "Jadot Yannick", "Hidalgo Anne", "Taubira Christiane",
"Macron Emmanuel", "Pecresse Valerie", "Le Pen Marine", "Zemmour Eric")) %>%
# mutate(month = as.factor(month)) %>%
ggplot(aes(x = month, y = bias, group = candidat, color = candidat)) +
geom_line() +
facet_wrap(~station_type, ncol = 2) +
theme_minimal() +
theme(axis.text = element_text())
knitr::opts_chunk$set(echo = TRUE)
coefs_df  <- expand_grid(
diff = rnorm(3),
term = letters[1:3],
model = letters[4:6]
)
library(tidyverse)
coefs_df  <- expand_grid(
diff = rnorm(3),
term = letters[1:3],
model = letters[4:6]
)
est1<- ggplot(coefs_df, aes(x=diff, y=term, group=Model, color=Model, shape=Model)) +
geom_pointrange(aes(xmin=diff_lower,xmax=diff_upper), size=1.1, fatten = 2,
position = position_dodge2(width = 0.75)) +
geom_vline(xintercept=0) +
labs(x="Difference in Predicted Public Support Estimate", y="", title="") +
scale_color_brewer(palette="PuOr")
est1
est> +
guides(colour=guide_legend(reverse=TRUE), fill = NULL)
est1 +
guides(colour=guide_legend(reverse=TRUE), fill = NULL)
coefs_df  <- expand_grid(
diff = rnorm(3),
term = letters[1:3],
model = letters[4:6]
) %>%
mutate(diff_lower = diff - .1, diff_upper = diff + .1)
est1<- ggplot(coefs_df, aes(x=diff, y=term, group=Model, color=Model, shape=Model)) +
geom_pointrange(aes(xmin=diff_lower,xmax=diff_upper), size=1.1, fatten = 2,
position = position_dodge2(width = 0.75)) +
geom_vline(xintercept=0) +
labs(x="Difference in Predicted Public Support Estimate", y="", title="") +
scale_color_brewer(palette="PuOr")
est1 +
theme_minimal() +
theme(legend.position = "top")
coefs_df  <- expand_grid(
diff = rnorm(3),
term = letters[1:3],
Model = letters[4:6]
) %>%
mutate(diff_lower = diff - .1, diff_upper = diff + .1)
est1<- ggplot(coefs_df, aes(x=diff, y=term, group=Model, color=Model, shape=Model)) +
geom_pointrange(aes(xmin=diff_lower,xmax=diff_upper), size=1.1, fatten = 2,
position = position_dodge2(width = 0.75)) +
geom_vline(xintercept=0) +
labs(x="Difference in Predicted Public Support Estimate", y="", title="") +
scale_color_brewer(palette="PuOr")
est1 +
theme_minimal() +
theme(legend.position = "top")
est1 +
guides(colour=guide_legend(reverse=TRUE),
fill = NULL)
est1 +
guides(colour=guide_legend(reverse=TRUE),
fill = guide_legend(reverse=TRUE),
shape = guide_legend(reverse=TRUE), )
est1 +
guides(colour=guide_legend(reverse=TRUE),
fill = guide_legend(reverse=TRUE),
shape = guide_legend(reverse=TRUE)) +
theme(legend.position = "top")
est1 +
theme_minimal() +
guides(colour=guide_legend(reverse=TRUE),
fill = guide_legend(reverse=TRUE),
shape = guide_legend(reverse=TRUE)) +
theme(legend.position = "top")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
source("scraping_utils.R")
source("parsing_utils.R")
elect_url <- "https://www.csa.fr/Proteger/Garantie-des-droits-et-libertes/Proteger-le-pluralisme-politique/La-presidentielle-2022"
all_links <- read_html(elect_url) %>%
html_elements("a[href][target]") %>%
html_attr("href") %>%
str_subset("csaelections") %>%
paste0("https://www.csa.fr", .)
out <- all_links %>%
map_dfr(~{
cli::cli_alert_info(.x)
.x %>%
read_html() %>%
html_elements("td > a[href]") %>%
html_attr("href") %>%
paste0("https://www.csa.fr", .) %>%
map_dfr(parse_page) %>%
mutate(circo = list(circo %>% map_dfr(~{
if(length(.x) == 0) return(tibble::tibble())
.x %>%
map_dfr(parse_page)
})))
}) %>%
mutate(election = "pres_2022")
write_rds(out, "../raw_data/election/pres_2022.rds")
fix <- function(.x, var, orig, lag){
if(orig %in% .x$date_end & lag %in% .x$date_end){
.x[[paste0(var, "")]][.x$date_end == orig] <- .x[[var]][.x$date_end == orig] - .x[[var]][.x$date_end == lag]
}
return(.x)
}
inp <- bind_rows(
tibble::tibble(orig = "2022-01-30", lag = "2022-01-16")
) %>%
mutate_all(lubridate::ymd)
tmp <- read_rds("../raw_data/election/pres_2022.rds")
tmp %>% count(title)
tmp %>% count(subtitle)
tmp_2022 <- tmp %>%
mutate(station = title %>%
str_squish %>%
str_remove("Les temps de parole et d´antenne sur ") %>%
str_remove("Les temps de parole et d'antenne sur") %>%
str_squish,
subtitle = str_squish(subtitle),
date_start = case_when(
str_detect(subtitle, "1er au \\d{2} janvier") ~ lubridate::dmy("01/01/2022"),
str_detect(subtitle, "1er janvier") ~ lubridate::dmy("01/01/2022"),
),
date_end = case_when(
str_detect(subtitle, "16 janvier") ~ lubridate::dmy("16/01/2022"),
str_detect(subtitle, "30 janvier") ~ lubridate::dmy("30/01/2022"),
str_detect(subtitle, "13 février") ~ lubridate::dmy("13/02/2022")
)) %>%
select(station, date_start, date_end, times) %>%
unnest(times) %>%
group_by(station, date_start, date_end) %>%
mutate(cand = tidyr:::fillDown(cand)) %>%
ungroup %>%
filter(!is.na(name)) %>%
mutate(time = parse_time(time),
candidat = str_detect(name, "Candidat"),
soutien = str_detect(name, "Soutiens"),
antenne = str_detect(name, "antenne"),
parole = str_detect(name, "parole")) %>%
group_by(station, date_start, date_end, cand) %>%
summarise(
time_candidat = if(any(candidat)) time[candidat] else 0,
time_support = if(any(soutien)) time[soutien] else 0,
time_speak = if(any(parole)) time[parole] else 0,
time_about = if(any(antenne)) time[antenne]else 0,
) %>%
ungroup %>%
mutate(
type = "presidential",
time_mention = time_about - time_speak,
cand = str_to_title(cand)) %>%
transmute(type, constituency = "national", date_start, date_end, station, candidat = cand, time_candidat, time_support, time_mention) %>%
group_by(type, constituency, station, candidat, date_start, date_end) %>%
summarise(across(contains("time"), sum)) %>%
ungroup %>%
mutate(station = case_when(
station == "BFMBusiness" ~ "BFM Business",
station == "BFMTV" ~ "BFM TV",
station == "CanalPlus" ~ "Canal+",
station == "Europe1" ~ "Europe 1",
station == "FranceO" ~ "France Ô",
station == "FranceinfoTV" ~ "France info TV",
station == "RadioClassique" ~ "Radio Classique",
station == "RMCDecouverte" ~ "RMC Découverte",
station == "SudRadio" ~ "Sud Radio",
str_detect(station, "France[^\\s]") ~ str_replace(station, "France", "France "),
T ~ station
)) %>%
glimpse
final_2022 <- tmp_2022 %>%
group_split(type, constituency, station, candidat) %>%
map_dfr(~{
for(j in nrow(inp):1){
.x <- .x %>% fix("time_candidat", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_support", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_mention", inp$orig[j], inp$lag[j])
.x$date_start[.x$date_end == inp$orig[j]] <- inp$lag[j]
}
return(.x)
}) %>%
mutate_if(is.numeric, round, 4) %>%
mutate(station = recode_channel(station))
write_rds(final_2022, here::here("inst/pres_2022.rds"))
readr::write_csv(final_2022, here::here("inst/csv/elections/pres_2022.csv"))
View(final_2022)
final_2022
fix <- function(.x, var, orig, lag){
if(orig %in% .x$date_end & lag %in% .x$date_end){
.x[[paste0(var, "")]][.x$date_end == orig] <- .x[[var]][.x$date_end == orig] - .x[[var]][.x$date_end == lag]
}
return(.x)
}
inp <- bind_rows(
tibble::tibble(orig = "2022-01-30", lag = "2022-01-16"),
tibble::tibble(orig = "2022-02-13", lag = "2022-01-30"),
) %>%
mutate_all(lubridate::ymd)
tmp <- read_rds("../raw_data/election/pres_2022.rds")
tmp_2022 <- tmp %>%
mutate(station = title %>%
str_squish %>%
str_remove("Les temps de parole et d´antenne sur ") %>%
str_remove("Les temps de parole et d'antenne sur") %>%
str_squish,
subtitle = str_squish(subtitle),
date_start = case_when(
str_detect(subtitle, "1er au \\d{2} janvier") ~ lubridate::dmy("01/01/2022"),
str_detect(subtitle, "1er janvier") ~ lubridate::dmy("01/01/2022"),
),
date_end = case_when(
str_detect(subtitle, "16 janvier") ~ lubridate::dmy("16/01/2022"),
str_detect(subtitle, "30 janvier") ~ lubridate::dmy("30/01/2022"),
str_detect(subtitle, "13 février") ~ lubridate::dmy("13/02/2022")
)) %>%
select(station, date_start, date_end, times) %>%
unnest(times) %>%
group_by(station, date_start, date_end) %>%
mutate(cand = tidyr:::fillDown(cand)) %>%
ungroup %>%
filter(!is.na(name)) %>%
mutate(time = parse_time(time),
candidat = str_detect(name, "Candidat"),
soutien = str_detect(name, "Soutiens"),
antenne = str_detect(name, "antenne"),
parole = str_detect(name, "parole")) %>%
group_by(station, date_start, date_end, cand) %>%
summarise(
time_candidat = if(any(candidat)) time[candidat] else 0,
time_support = if(any(soutien)) time[soutien] else 0,
time_speak = if(any(parole)) time[parole] else 0,
time_about = if(any(antenne)) time[antenne]else 0,
) %>%
ungroup %>%
mutate(
type = "presidential",
time_mention = time_about - time_speak,
cand = str_to_title(cand)) %>%
transmute(type, constituency = "national", date_start, date_end, station, candidat = cand, time_candidat, time_support, time_mention) %>%
group_by(type, constituency, station, candidat, date_start, date_end) %>%
summarise(across(contains("time"), sum)) %>%
ungroup %>%
mutate(station = case_when(
station == "BFMBusiness" ~ "BFM Business",
station == "BFMTV" ~ "BFM TV",
station == "CanalPlus" ~ "Canal+",
station == "Europe1" ~ "Europe 1",
station == "FranceO" ~ "France Ô",
station == "FranceinfoTV" ~ "France info TV",
station == "RadioClassique" ~ "Radio Classique",
station == "RMCDecouverte" ~ "RMC Découverte",
station == "SudRadio" ~ "Sud Radio",
str_detect(station, "France[^\\s]") ~ str_replace(station, "France", "France "),
T ~ station
)) %>%
glimpse
final_2022 <- tmp_2022 %>%
group_split(type, constituency, station, candidat) %>%
map_dfr(~{
for(j in nrow(inp):1){
.x <- .x %>% fix("time_candidat", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_support", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_mention", inp$orig[j], inp$lag[j])
.x$date_start[.x$date_end == inp$orig[j]] <- inp$lag[j]
}
return(.x)
}) %>%
mutate_if(is.numeric, round, 4) %>%
mutate(station = recode_channel(station))
write_rds(final_2022, here::here("inst/pres_2022.rds"))
readr::write_csv(final_2022, here::here("inst/csv/elections/pres_2022.csv"))
View(final_2022)
blogdown::build_site()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
source("scraping_utils.R")
source("parsing_utils.R")
elect_url <- "https://www.csa.fr/Proteger/Garantie-des-droits-et-libertes/Proteger-le-pluralisme-politique/La-presidentielle-2022"
all_links <- read_html(elect_url) %>%
html_elements("a[href][target]") %>%
html_attr("href") %>%
str_subset("csaelections") %>%
paste0("https://www.csa.fr", .)
out <- all_links %>%
map_dfr(~{
cli::cli_alert_info(.x)
.x %>%
read_html() %>%
html_elements("td > a[href]") %>%
html_attr("href") %>%
paste0("https://www.csa.fr", .) %>%
map_dfr(parse_page) %>%
mutate(circo = list(circo %>% map_dfr(~{
if(length(.x) == 0) return(tibble::tibble())
.x %>%
map_dfr(parse_page)
})))
}) %>%
mutate(election = "pres_2022")
write_rds(out, "../raw_data/election/pres_2022.rds")
fix <- function(.x, var, orig, lag){
if(orig %in% .x$date_end & lag %in% .x$date_end){
.x[[paste0(var, "")]][.x$date_end == orig] <- .x[[var]][.x$date_end == orig] - .x[[var]][.x$date_end == lag]
}
return(.x)
}
tmp <- read_rds("../raw_data/election/pres_2022.rds")
uniuqe(tmp$subtitle)
unique(tmp$subtitle)
# unique(tmp$subtitle)
tmp_2022 <- tmp %>%
mutate(station = title %>%
str_squish %>%
str_remove("Les temps de parole et d´antenne sur ") %>%
str_remove("Les temps de parole et d'antenne sur") %>%
str_squish,
subtitle = str_squish(subtitle),
date_start = case_when(
str_detect(subtitle, "1er au \\d{2} janvier") ~ lubridate::dmy("01/01/2022"),
str_detect(subtitle, "1er janvier") ~ lubridate::dmy("01/01/2022"),
),
date_end = case_when(
str_detect(subtitle, "16 janvier") ~ lubridate::dmy("16/01/2022"),
str_detect(subtitle, "30 janvier") ~ lubridate::dmy("30/01/2022"),
str_detect(subtitle, "13 février") ~ lubridate::dmy("13/02/2022")
str_detect(subtitle, "27 février") ~ lubridate::dmy("27/02/2022")
unique(tmp$subtitle)
# unique(tmp$subtitle)
tmp_2022 <- tmp %>%
mutate(station = title %>%
str_squish %>%
str_remove("Les temps de parole et d´antenne sur ") %>%
str_remove("Les temps de parole et d'antenne sur") %>%
str_squish,
subtitle = str_squish(subtitle),
date_start = case_when(
str_detect(subtitle, "1er au \\d{2} janvier") ~ lubridate::dmy("01/01/2022"),
str_detect(subtitle, "1er janvier") ~ lubridate::dmy("01/01/2022"),
),
date_end = case_when(
str_detect(subtitle, "16 janvier") ~ lubridate::dmy("16/01/2022"),
str_detect(subtitle, "30 janvier") ~ lubridate::dmy("30/01/2022"),
str_detect(subtitle, "13 février") ~ lubridate::dmy("13/02/2022"),
str_detect(subtitle, "27 février") ~ lubridate::dmy("27/02/2022")
)) %>%
select(station, date_start, date_end, times) %>%
unnest(times) %>%
group_by(station, date_start, date_end) %>%
mutate(cand = tidyr:::fillDown(cand)) %>%
ungroup %>%
filter(!is.na(name)) %>%
mutate(time = parse_time(time),
candidat = str_detect(name, "Candidat"),
soutien = str_detect(name, "Soutiens"),
antenne = str_detect(name, "antenne"),
parole = str_detect(name, "parole")) %>%
group_by(station, date_start, date_end, cand) %>%
summarise(
time_candidat = if(any(candidat)) time[candidat] else 0,
time_support = if(any(soutien)) time[soutien] else 0,
time_speak = if(any(parole)) time[parole] else 0,
time_about = if(any(antenne)) time[antenne]else 0,
) %>%
ungroup %>%
mutate(
type = "presidential",
time_mention = time_about - time_speak,
cand = str_to_title(cand)) %>%
transmute(type, constituency = "national", date_start, date_end, station, candidat = cand, time_candidat, time_support, time_mention) %>%
group_by(type, constituency, station, candidat, date_start, date_end) %>%
summarise(across(contains("time"), sum)) %>%
ungroup %>%
mutate(station = case_when(
station == "BFMBusiness" ~ "BFM Business",
station == "BFMTV" ~ "BFM TV",
station == "CanalPlus" ~ "Canal+",
station == "Europe1" ~ "Europe 1",
station == "FranceO" ~ "France Ô",
station == "FranceinfoTV" ~ "France info TV",
station == "RadioClassique" ~ "Radio Classique",
station == "RMCDecouverte" ~ "RMC Découverte",
station == "SudRadio" ~ "Sud Radio",
str_detect(station, "France[^\\s]") ~ str_replace(station, "France", "France "),
T ~ station
)) %>%
glimpse
final_2022 <- tmp_2022 %>%
group_split(type, constituency, station, candidat) %>%
map_dfr(~{
for(j in nrow(inp):1){
.x <- .x %>% fix("time_candidat", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_support", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_mention", inp$orig[j], inp$lag[j])
.x$date_start[.x$date_end == inp$orig[j]] <- inp$lag[j]
}
return(.x)
}) %>%
mutate_if(is.numeric, round, 4) %>%
mutate(station = recode_channel(station))
inp <- bind_rows(
tibble::tibble(orig = "2022-01-30", lag = "2022-01-16"),
tibble::tibble(orig = "2022-02-13", lag = "2022-01-30"),
tibble::tibble(orig = "2022-02-27", lag = "2022-02-13"),
) %>%
mutate_all(lubridate::ymd)
final_2022 <- tmp_2022 %>%
group_split(type, constituency, station, candidat) %>%
map_dfr(~{
for(j in nrow(inp):1){
.x <- .x %>% fix("time_candidat", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_support", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_mention", inp$orig[j], inp$lag[j])
.x$date_start[.x$date_end == inp$orig[j]] <- inp$lag[j]
}
return(.x)
}) %>%
mutate_if(is.numeric, round, 4) %>%
mutate(station = recode_channel(station))
final_2022 <- tmp_2022 %>%
group_split(type, constituency, station, candidat) %>%
map_dfr(~{
for(j in nrow(inp):1){
.x <- .x %>% fix("time_candidat", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_support", inp$orig[j], inp$lag[j])
.x <- .x %>% fix("time_mention", inp$orig[j], inp$lag[j])
.x$date_start[.x$date_end == inp$orig[j]] <- inp$lag[j]
}
return(.x)
}) %>%
mutate_if(is.numeric, round, 4) %>%
mutate(station = recode_channel(station))
write_rds(final_2022, here::here("inst/pres_2022.rds"))
readr::write_csv(final_2022, here::here("inst/csv/elections/pres_2022.csv"))
View(final_2022)
