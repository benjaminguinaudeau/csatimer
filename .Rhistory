unnest(strat) %>%
mutate(main = strat %in% red)
}
new_chord <- function(chord, red = "", ...){
strats <- as.list(...)
tibble::tibble(
strat = strats,
chord = chord
) %>%
unnest(strat) %>%
mutate(main = strat %in% red)
}
new_chord(chords = 1, ...)
new_chord(chords = 1, 3, 5)
new_chord <- function(chord, red = "", ...){
strats <- as.list(...) %>%
glimpse
tibble::tibble(
strat = strats,
chord = chord
) %>%
unnest(strat) %>%
mutate(main = strat %in% red)
}
new_chord(chords = 1, 3, 5)
new_chord <- function(chord, red = "", ...){
strats <- list(...)
tibble::tibble(
strat = strats,
chord = chord
) %>%
unnest(strat) %>%
mutate(main = strat %in% red)
}
new_chord(chords = 1, 3, 5)
new_chord <- function(chord, red = "", ...){
strats <- purrr::reduce(c, list(...))
tibble::tibble(
strat = strats,
chord = chord
) %>%
unnest(strat) %>%
mutate(main = strat %in% red)
}
new_chord(chords = 1, 3, 5)
new_chord <- function(chord, red = "", ...){
strats <- purrr::reduce(list(...), c)
tibble::tibble(
strat = strats,
chord = chord
) %>%
unnest(strat) %>%
mutate(main = strat %in% red)
}
new_chord(chords = 1, 3, 5)
new_chord(chords = 1, 3, 5, 6)
new_chord(chords = 1, 3, 5, 6, 7)
new_chord <- function(chord, ..., red = ""){
strats <- purrr::reduce(list(...), c)
tibble::tibble(
strat = strats,
chord = chord
) %>%
unnest(strat) %>%
mutate(main = strat %in% red)
}
new_chord(chords = 1, 3, 5, 6, 7)
new_chord(chord = 1, 3, 5, 6, 7)
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12))
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(0, 12)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(0, 12)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(0, 12)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
)
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(0, 12)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(0, 12)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(0, 12)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord()
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord()
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord()
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord()
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord()
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord()
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord()
bind_rows(
new_chord(chord = 1, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 1, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 8, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 3, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 11, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12))
) %>%
print_chord()
new_chord <- function(chord, ..., red = "", green = ""){
strats <- purrr::reduce(list(...), c)
tibble::tibble(
strat = strats,
chord = chord
) %>%
unnest(strat) %>%
mutate(color = case_when(
strat %in% red ~ "red",
strat %in% green ~ "green",
T ~ "black"))
}
red
input %>%
unnest(strat) %>%
mutate(
shape = is.na(strat),
size = ifelse(shape, 15, 10),
strat = ifelse(is.na(strat), 0, strat),
strat = ifelse(strat == 0, 0, -strat + .5)) %>%
ggplot() +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = 1.5, color = "grey50", data = big) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = .8, color = "grey80", data = small) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend, size = .01*size), color = "black", data = chords) +
geom_point(aes(x = strat, y = -chord, color = color, shape = shape, size = size)) +
coord_equal(ratio = .3) +
theme_void() +
scale_color_manual(values = c("black", "red")) +
scale_size(range = c(.1, ifelse(any(is.na(input$strat)), 15, 10))) +
scale_y_continuous(expand = c(.1, .1)) +
scale_shape_manual(values = c("FALSE" = 16, "TRUE" = 4)) +
guides(color = "none", size = "none", shape = "none") +
scale_x_continuous(limits = c(max_strat, 0)) +
ggtitle(paste0("     ", title)) +
theme(title = element_text(hjust = .5))
print_chord <- function(input, title = ""){
max_strat <- min(-4, -max(purrr::reduce(input$strat, c), na.rm = T))
big <- tibble(y = -1, yend = -6, xend = c(0, 3, 5, 7, 9, 12, 15)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
small <- tibble(y = -1, yend = -6, xend = c(1, 2, 4, 6, 8, 10, 11, 13, 14)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
chords <- tibble::tibble(y = c(-1:-6), size = 6:1) %>% mutate(yend = y, x = 0, xend = max_strat)
if(!rlang::has_name(input, "chord")) input$chord <- 1:6
if(!rlang::has_name(input, "main")) input$color <- add_main(input$chord, unique(input$red))
input %>%
unnest(strat) %>%
mutate(
shape = is.na(strat),
size = ifelse(shape, 15, 10),
strat = ifelse(is.na(strat), 0, strat),
strat = ifelse(strat == 0, 0, -strat + .5)) %>%
ggplot() +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = 1.5, color = "grey50", data = big) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = .8, color = "grey80", data = small) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend, size = .01*size), color = "black", data = chords) +
geom_point(aes(x = strat, y = -chord, color = color, shape = shape, size = size)) +
coord_equal(ratio = .3) +
theme_void() +
scale_color_manual(values = c("black", "red")) +
scale_size(range = c(.1, ifelse(any(is.na(input$strat)), 15, 10))) +
scale_y_continuous(expand = c(.1, .1)) +
scale_shape_manual(values = c("FALSE" = 16, "TRUE" = 4)) +
guides(color = "none", size = "none", shape = "none") +
scale_x_continuous(limits = c(max_strat, 0)) +
ggtitle(paste0("     ", title)) +
theme(title = element_text(hjust = .5))
}
print_chord <- function(input, title = ""){
max_strat <- min(-4, -max(purrr::reduce(input$strat, c), na.rm = T))
big <- tibble(y = -1, yend = -6, xend = c(0, 3, 5, 7, 9, 12, 15)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
small <- tibble(y = -1, yend = -6, xend = c(1, 2, 4, 6, 8, 10, 11, 13, 14)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
chords <- tibble::tibble(y = c(-1:-6), size = 6:1) %>% mutate(yend = y, x = 0, xend = max_strat)
if(!rlang::has_name(input, "chord")) input$chord <- 1:6
if(!rlang::has_name(input, "main")) input$color <- add_main(input$chord, unique(input$red))
input %>%
unnest(strat) %>%
mutate(
shape = is.na(strat),
size = ifelse(shape, 15, 10),
strat = ifelse(is.na(strat), 0, strat),
strat = ifelse(strat == 0, 0, -strat + .5)) %>%
ggplot() +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = 1.5, color = "grey50", data = big) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = .8, color = "grey80", data = small) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend, size = .01*size), color = "black", data = chords) +
geom_point(aes(x = strat, y = -chord, color = color, shape = shape, size = size)) +
coord_equal(ratio = .3) +
theme_void() +
# scale_color_manual(values = c("black", "red")) +
scale_size(range = c(.1, ifelse(any(is.na(input$strat)), 15, 10))) +
scale_y_continuous(expand = c(.1, .1)) +
scale_shape_manual(values = c("FALSE" = 16, "TRUE" = 4)) +
guides(color = "none", size = "none", shape = "none") +
scale_x_continuous(limits = c(max_strat, 0)) +
ggtitle(paste0("     ", title)) +
theme(title = element_text(hjust = .5))
}
tibble::tibble(strat = c(2, 4, 4, 3, 2, NA), red = 1) %>% print_chord(title = "")
print_chord <- function(input, title = ""){
max_strat <- min(-4, -max(purrr::reduce(input$strat, c), na.rm = T))
big <- tibble(y = -1, yend = -6, xend = c(0, 3, 5, 7, 9, 12, 15)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
small <- tibble(y = -1, yend = -6, xend = c(1, 2, 4, 6, 8, 10, 11, 13, 14)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
chords <- tibble::tibble(y = c(-1:-6), size = 6:1) %>% mutate(yend = y, x = 0, xend = max_strat)
if(!rlang::has_name(input, "chord")) input$chord <- 1:6
if(!rlang::has_name(input, "main")) input$color <- add_main(input$chord, unique(input$red))
input %>%
unnest(strat) %>%
mutate(
shape = is.na(strat),
size = ifelse(shape, 15, 10),
strat = ifelse(is.na(strat), 0, strat),
strat = ifelse(strat == 0, 0, -strat + .5)) %>%
ggplot() +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = 1.5, color = "grey50", data = big) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = .8, color = "grey80", data = small) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend, size = .01*size), color = "black", data = chords) +
geom_point(aes(x = strat, y = -chord, color = color, shape = shape, size = size)) +
coord_equal(ratio = .3) +
theme_void() +
scale_color_manual(values = c("black" = "black", "red" = "red", "green" = "green")) +
scale_size(range = c(.1, ifelse(any(is.na(input$strat)), 15, 10))) +
scale_y_continuous(expand = c(.1, .1)) +
scale_shape_manual(values = c("FALSE" = 16, "TRUE" = 4)) +
guides(color = "none", size = "none", shape = "none") +
scale_x_continuous(limits = c(max_strat, 0)) +
ggtitle(paste0("     ", title)) +
theme(title = element_text(hjust = .5))
}
tibble::tibble(strat = c(2, 4, 4, 3, 2, NA), red = 1) %>% print_chord(title = "")
bind_rows(
new_chord(chord = 1, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 1, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 8, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 3, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 11, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12))
) %>%
print_chord()
max_strat <- min(-4, -max(purrr::reduce(input$strat, c), na.rm = T))
input <- tibble::tibble(strat = c(2, 4, 4, 3, 2, NA), red = 1)
max_strat <- min(-4, -max(purrr::reduce(input$strat, c), na.rm = T))
big <- tibble(y = -1, yend = -6, xend = c(0, 3, 5, 7, 9, 12, 15)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
small <- tibble(y = -1, yend = -6, xend = c(1, 2, 4, 6, 8, 10, 11, 13, 14)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
small <- tibble(y = -1, yend = -6, xend = c(1, 2, 4, 6, 8, 10, 11, 13, 14)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
chords <- tibble::tibble(y = c(-1:-6), size = 6:1) %>% mutate(yend = y, x = 0, xend = max_strat)
chords
if(!rlang::has_name(input, "chord")) input$chord <- 1:6
if(!rlang::has_name(input, "main")) input$color <- add_main(input$chord, unique(input$red))
input$color
add_main <- function(x, main){
tmp <- rep("black", length(x))
if(main == 0) return(tmp)
tmp[main] <- "red"
tmp
}
tibble::tibble(strat = c(2, 4, 4, 3, 2, NA), red = 1) %>% print_chord(title = "")
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord(title = "E / Pentatonique")
print_chord <- function(input, title = ""){
max_strat <- min(-4, -max(purrr::reduce(input$strat, c), na.rm = T))
big <- tibble(y = -1, yend = -6, xend = c(0, 3, 5, 7, 9, 12, 15)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
small <- tibble(y = -1, yend = -6, xend = c(1, 2, 4, 6, 8, 10, 11, 13, 14)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
chords <- tibble::tibble(y = c(-1:-6), size = 6:1) %>% mutate(yend = y, x = 0, xend = max_strat)
if(!rlang::has_name(input, "chord")) input$chord <- 1:6
if(!rlang::has_name(input, "color")) input$color <- add_main(input$chord, unique(input$red))
input %>%
unnest(strat) %>%
mutate(
shape = is.na(strat),
size = ifelse(shape, 15, 10),
strat = ifelse(is.na(strat), 0, strat),
strat = ifelse(strat == 0, 0, -strat + .5)) %>%
ggplot() +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = 1.5, color = "grey50", data = big) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = .8, color = "grey80", data = small) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend, size = .01*size), color = "black", data = chords) +
geom_point(aes(x = strat, y = -chord, color = color, shape = shape, size = size)) +
coord_equal(ratio = .3) +
theme_void() +
scale_color_manual(values = c("black" = "black", "red" = "red", "green" = "green")) +
scale_size(range = c(.1, ifelse(any(is.na(input$strat)), 15, 10))) +
scale_y_continuous(expand = c(.1, .1)) +
scale_shape_manual(values = c("FALSE" = 16, "TRUE" = 4)) +
guides(color = "none", size = "none", shape = "none") +
scale_x_continuous(limits = c(max_strat, 0)) +
ggtitle(paste0("     ", title)) +
theme(title = element_text(hjust = .5))
}
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord(title = "E / Pentatonique")
bind_rows(
new_chord(chord = 1, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = c(6)),
new_chord(chord = 2, 0, 1, 2, 5, 7, 10, 12, red = c(7), green = c(1)),
new_chord(chord = 3, 0, 2, 5, 7, 8, 9, 12, red = c(2), green = 8),
new_chord(chord = 4, 0, 2, 3, 4, 7, 9, 12, red = c(9), green = 5),
new_chord(chord = 5, 0, 3, 5, 8, 10, 11, 12, red = c(5), green = 1),
new_chord(chord = 6, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = 6)
) %>%
print_chord()
new_chord <- function(chord, ..., red = "", green = ""){
strats <- purrr::reduce(list(...), c)
tibble::tibble(
strat = strats,
chord = chord
) %>%
unnest(strat) %>%
mutate(color = case_when(
strat %in% red ~ "red",
strat %in% green ~ "darkgreen",
T ~ "black"))
}
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord(title = "E / Pentatonique")
bind_rows(
new_chord(chord = 1, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = c(6)),
new_chord(chord = 2, 0, 1, 2, 5, 7, 10, 12, red = c(7), green = c(1)),
new_chord(chord = 3, 0, 2, 5, 7, 8, 9, 12, red = c(2), green = 8),
new_chord(chord = 4, 0, 2, 3, 4, 7, 9, 12, red = c(9), green = 5),
new_chord(chord = 5, 0, 3, 5, 8, 10, 11, 12, red = c(5), green = 1),
new_chord(chord = 6, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = 6)
) %>%
print_chord()
input %>%
unnest(strat) %>%
mutate(
shape = is.na(strat),
size = ifelse(shape, 15, 10),
strat = ifelse(is.na(strat), 0, strat),
strat = ifelse(strat == 0, 0, -strat + .5)) %>%
ggplot() +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = 1.5, color = "grey50", data = big) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = .8, color = "grey80", data = small) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend, size = .01*size), color = "black", data = chords) +
geom_point(aes(x = strat, y = -chord, color = color, shape = shape, size = size)) +
coord_equal(ratio = .3) +
theme_void() +
scale_color_manual(values = c("black" = "black", "red" = "red", "green" = "darkgreen")) +
scale_size(range = c(.1, ifelse(any(is.na(input$strat)), 15, 10))) +
scale_y_continuous(expand = c(.1, .1)) +
scale_shape_manual(values = c("FALSE" = 16, "TRUE" = 4)) +
guides(color = "none", size = "none", shape = "none") +
scale_x_continuous(limits = c(max_strat, 0)) +
ggtitle(paste0("     ", title)) +
theme(title = element_text(hjust = .5))
print_chord <- function(input, title = ""){
max_strat <- min(-4, -max(purrr::reduce(input$strat, c), na.rm = T))
big <- tibble(y = -1, yend = -6, xend = c(0, 3, 5, 7, 9, 12, 15)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
small <- tibble(y = -1, yend = -6, xend = c(1, 2, 4, 6, 8, 10, 11, 13, 14)) %>% mutate(xend = -xend, x = xend) %>%
dplyr::filter(xend >= max_strat)
chords <- tibble::tibble(y = c(-1:-6), size = 6:1) %>% mutate(yend = y, x = 0, xend = max_strat)
if(!rlang::has_name(input, "chord")) input$chord <- 1:6
if(!rlang::has_name(input, "color")) input$color <- add_main(input$chord, unique(input$red))
input %>%
unnest(strat) %>%
mutate(
shape = is.na(strat),
size = ifelse(shape, 15, 10),
strat = ifelse(is.na(strat), 0, strat),
strat = ifelse(strat == 0, 0, -strat + .5)) %>%
ggplot() +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = 1.5, color = "grey50", data = big) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend), size = .8, color = "grey80", data = small) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend, size = .01*size), color = "black", data = chords) +
geom_point(aes(x = strat, y = -chord, color = color, shape = shape, size = size)) +
coord_equal(ratio = .3) +
theme_void() +
scale_color_manual(values = c("black" = "black", "red" = "red", "green" = "darkgreen")) +
scale_size(range = c(.1, ifelse(any(is.na(input$strat)), 15, 10))) +
scale_y_continuous(expand = c(.1, .1)) +
scale_shape_manual(values = c("FALSE" = 16, "TRUE" = 4)) +
guides(color = "none", size = "none", shape = "none") +
scale_x_continuous(limits = c(max_strat, 0)) +
ggtitle(paste0("     ", title)) +
theme(title = element_text(hjust = .5))
}
bind_rows(
new_chord(chord = 1, 0, 3, 5, 7, 10, 12, red = c(0, 12)),
new_chord(chord = 2, 0, 2, 5, 7, 10, 12, red = c(7)),
new_chord(chord = 3, 0, 2, 5, 7, 9, 12, red = c(2)),
new_chord(chord = 4, 0, 2, 4, 7, 9, 12, red = c(9)),
new_chord(chord = 5, 0, 3, 5, 8, 10, 12, red = c(5)),
new_chord(chord = 6, 0, 3, 5, 7, 10, 12, red = c(0, 12))
) %>%
print_chord(title = "E / Pentatonique")
bind_rows(
new_chord(chord = 1, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = c(6)),
new_chord(chord = 2, 0, 1, 2, 5, 7, 10, 12, red = c(7), green = c(1)),
new_chord(chord = 3, 0, 2, 5, 7, 8, 9, 12, red = c(2), green = 8),
new_chord(chord = 4, 0, 2, 3, 4, 7, 9, 12, red = c(9), green = 5),
new_chord(chord = 5, 0, 3, 5, 8, 10, 11, 12, red = c(5), green = 1),
new_chord(chord = 6, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = 6)
) %>%
print_chord()
new_chord <- function(chord, ..., red = "", green = ""){
strats <- purrr::reduce(list(...), c)
tibble::tibble(
strat = strats,
chord = chord
) %>%
unnest(strat) %>%
mutate(color = case_when(
strat %in% red ~ "red",
strat %in% green ~ "green",
T ~ "black"))
}
bind_rows(
new_chord(chord = 1, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = c(6)),
new_chord(chord = 2, 0, 1, 2, 5, 7, 10, 12, red = c(7), green = c(1)),
new_chord(chord = 3, 0, 2, 5, 7, 8, 9, 12, red = c(2), green = 8),
new_chord(chord = 4, 0, 2, 3, 4, 7, 9, 12, red = c(9), green = 5),
new_chord(chord = 5, 0, 3, 5, 8, 10, 11, 12, red = c(5), green = 1),
new_chord(chord = 6, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = 6)
) %>%
print_chord()
bind_rows(
new_chord(chord = 1, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = c(6)),
new_chord(chord = 2, 0, 1, 2, 5, 7, 10, 12, red = c(7), green = c(1)),
new_chord(chord = 3, 0, 2, 5, 7, 8, 9, 12, red = c(2), green = 8),
new_chord(chord = 4, 0, 2, 3, 4, 7, 9, 12, red = c(9), green = 5),
new_chord(chord = 5, 0, 3, 5, 8, 10, 11, 12, red = c(5), green = 1),
new_chord(chord = 6, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = 6)
) %>%
print_chord()
bind_rows(
new_chord(chord = 1, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = 6),
new_chord(chord = 2, 0, 1, 2, 5, 7, 10, 12, red = c(7), green = 1),
new_chord(chord = 3, 0, 2, 5, 7, 8, 9, 12, red = c(2), green = 8),
new_chord(chord = 4, 0, 2, 3, 4, 7, 9, 12, red = c(9), green = 3),
new_chord(chord = 5, 0, 3, 5, 8, 10, 11, 12, red = c(5), green = 11),
new_chord(chord = 6, 0, 3, 5, 6, 7, 10, 12, red = c(0, 12), green = 6)
) %>%
print_chord()
